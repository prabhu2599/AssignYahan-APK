{"version":3,"sources":["src/signs/pg.png","src/signs/lom.png","src/signs/sat.png","src/signs/sar.png","src/signs/pat.png","src/playscreen.js","App.js","web-build/register-service-worker.js"],"names":["module","exports","pg","require","lom","sat","sar","pat","randomGen","img","Math","floor","random","length","bgcolors","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","emojis","color","fontSize","header","fontWeight","fontFamily","button","marginTop","position","bottom","width","height","marginEnd","PlayScreen","useState","counter","setCounter","useEffect","setTimeout","clearTimeout","View","style","compose","Text","Image","source","Button","onPress","title","App","play","setPlay","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,qJCIrCC,EAAKC,EAAQ,KACbC,EAAMD,EAAQ,KACdE,EAAMF,EAAQ,KACdG,EAAMH,EAAQ,KACdI,EAAMJ,EAAQ,KAEdK,EAAY,WACd,IAAMC,EAAM,CAACP,EAAGE,EAAIE,EAAID,EAAIE,GAE5B,OAAOE,EADMC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,UAI1CC,EAAW,CAAC,UAAU,UAAU,UAAU,UAAU,WAgCpDC,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,UAElBC,OAAQ,CACNC,MAAO,QACPC,SAAU,KAEZC,OAAQ,CACNC,WAAY,OACZC,WAAY,gBACZH,SAAU,IACVD,MAAO,SAGTK,OAAQ,CAGNC,UAAW,GACXC,SAAU,WACVC,OAAQ,IAEVvB,IAAK,CACDwB,MAAO,IACPC,OAAQ,IACRC,UAAW,MAMFC,EAhEI,WAAO,IAAD,EACSC,mBAAS,GADlB,WACdC,EADc,KACLC,EADK,KAcrB,OAZAC,qBAAU,WACN,GAAe,IAAZF,EAAH,CAGcG,YAAW,WACrBF,EAAWD,EAAQ,KACpB,KACH,OAAO,WACHI,iBAEL,CAACJ,IAGA,kBAACK,EAAA,EAAD,CAAMC,MAAO5B,IAAW6B,QAAQ9B,EAAOG,UAAW,CAACE,gBAAiBN,EAASJ,KAAKC,MAAMD,KAAKE,SAAWE,EAASD,YAC5GyB,EAAU,EACP,kBAACQ,EAAA,EAAD,CAAMF,MAAS7B,EAAOW,QAASY,GAE3B,oCACA,kBAACS,EAAA,EAAD,CAAOH,MAAO7B,EAAON,IAAKuC,OAAQxC,MAClC,kBAACmC,EAAA,EAAD,CAAMC,MAAO7B,EAAOc,QACpB,kBAACoB,EAAA,EAAD,CAAQC,QAAS,kBAAMX,EAAW,IAAIY,MAAM,8BCjCjD,SAASC,IAAO,IAAD,EAEHf,oBAAS,GAFN,WAErBgB,EAFqB,KAEfC,EAFe,KAK5B,OACED,EAAQ,kBAAC,EAAD,MACN,kBAACV,EAAA,EAAD,CAAMC,MAAO7B,EAAOG,WACpB,kBAAC4B,EAAA,EAAD,CAAMF,MAAO7B,EAAOW,QAApB,yBACA,kBAACoB,EAAA,EAAD,CAAMF,MAAO7B,EAAOQ,QAApB,0CACA,kBAACoB,EAAA,EAAD,CAAMC,MAAQ7B,EAAOc,QACrB,kBAACoB,EAAA,EAAD,CAAQC,QAAW,kBAAMI,GAAQ,IAAOH,MAAQ,iBAStD,IAAMpC,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,UAElBC,OAAQ,CACNC,MAAO,QACPC,SAAU,KAEZC,OAAQ,CACNC,WAAY,OACZC,WAAY,gBACZH,SAAU,GACVD,MAAO,SAGTK,OAAQ,CACNI,MAAO,IACPC,OAAQ,IACRJ,UAAU,O,4DC9CV,kBAAmByB,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CC,MAAK,SAAUC,OAGfC,OAAM,SAAUC,GACfC,QAAQH,KAAK,oCAAqCE,W","file":"static/js/app.bf091aa9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pg.7bc00dc0.png\";","module.exports = __webpack_public_path__ + \"static/media/lom.c85708f0.png\";","module.exports = __webpack_public_path__ + \"static/media/sat.59b1c59b.png\";","module.exports = __webpack_public_path__ + \"static/media/sar.ebb3cc34.png\";","module.exports = __webpack_public_path__ + \"static/media/pat.d6acdcf0.png\";","import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\nimport { Button, StyleSheet, Text, TouchableWithoutFeedback, View, Image } from 'react-native';\n\nconst pg = require(\"./signs/pg.png\")\nconst lom = require(\"./signs/lom.png\")\nconst sat = require(\"./signs/sat.png\")\nconst sar = require(\"./signs/sar.png\")\nconst pat = require(\"./signs/pat.png\")\n\nconst randomGen = () => {\n    const img = [pg,lom,sar,sat,pat]\n    const rand = Math.floor(Math.random() * img.length);\n    return img[rand];\n}\n\nconst bgcolors = ['#e58e26','#b71540','#0c2461','#0a3d62','#079992'];\n\nconst PlayScreen = () => {\n    const [counter ,setCounter] = useState(3)\n    useEffect(() => {\n        if(counter === 0) {\n            return \n        }\n        const timer = setTimeout(() => {\n            setCounter(counter-1)\n        }, 500); \n        return () => {\n            clearTimeout\n        }\n    }, [counter])\n\n    return (\n        <View style={StyleSheet.compose(styles.container, {backgroundColor: bgcolors[Math.floor(Math.random() * bgcolors.length)]})}>\n            {counter > 0 ? (\n                <Text style = {styles.header}>{counter}</Text>\n                ) : (\n                    <>\n                    <Image style={styles.img} source={randomGen()}/>\n                    <View style={styles.button}>\n                    <Button onPress={() => setCounter(3)} title='Assign New Assignment'/>\n                    </View>\n                </>\n                )}  \n        </View>\n      );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  emojis: {\n    color: 'white',\n    fontSize: 100,\n  },\n  header: {\n    fontWeight: 'bold',\n    fontFamily: 'lucida grande',\n    fontSize: 200,\n    color: 'white',\n    //marginEnd: 100,\n  },\n  button: {\n    //width: 350,\n    //height: 100,\n    marginTop: 50,\n    position: \"absolute\",\n    bottom: 35\n  },\n  img: {\n      width: 200,\n      height: 300,\n      marginEnd: 50\n  }\n\n});\n\n\nexport default PlayScreen","import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { Button, StyleSheet, Text, TouchableWithoutFeedback, View } from 'react-native';\nimport Playscreen from \"./src/playscreen\";\n\n\n\nexport default function App() {\n\n  const [play, setPlay] =  useState(false)\n\n\n  return (\n    play ? (<Playscreen/>) : (\n      <View style={styles.container}>\n      <Text style={styles.header}>Assignments Yahan !!!</Text>\n      <Text style={styles.emojis}>ü•∫ ü•± üòè</Text>\n      <View style= {styles.button}>\n      <Button onPress = {() => setPlay(true)} title = 'Assign Now'/>\n      </View>\n      </View>\n    )\n    \n    \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  emojis: {\n    color: 'white',\n    fontSize: 100,\n  },\n  header: {\n    fontWeight: 'bold',\n    fontFamily: 'lucida grande',\n    fontSize: 35,\n    color: 'white',\n    //marginEnd: 100,\n  },\n  button: {\n    width: 350,\n    height: 100,\n    marginTop:50\n  }\n\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}